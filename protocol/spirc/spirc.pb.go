// Code generated by protoc-gen-go. DO NOT EDIT.
// source: spirc.proto

/*
Package spirc is a generated protocol buffer package.

It is generated from these files:
	spirc.proto

It has these top-level messages:
	Frame
	DeviceState
	Capability
	Goodbye
	State
	TrackRef
	Ad
	Metadata
*/
package spirc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type MessageType int32

const (
	MessageType_kMessageTypeHello          MessageType = 1
	MessageType_kMessageTypeGoodbye        MessageType = 2
	MessageType_kMessageTypeProbe          MessageType = 3
	MessageType_kMessageTypeNotify         MessageType = 10
	MessageType_kMessageTypeLoad           MessageType = 20
	MessageType_kMessageTypePlay           MessageType = 21
	MessageType_kMessageTypePause          MessageType = 22
	MessageType_kMessageTypePlayPause      MessageType = 23
	MessageType_kMessageTypeSeek           MessageType = 24
	MessageType_kMessageTypePrev           MessageType = 25
	MessageType_kMessageTypeNext           MessageType = 26
	MessageType_kMessageTypeVolume         MessageType = 27
	MessageType_kMessageTypeShuffle        MessageType = 28
	MessageType_kMessageTypeRepeat         MessageType = 29
	MessageType_kMessageTypeVolumeDown     MessageType = 31
	MessageType_kMessageTypeVolumeUp       MessageType = 32
	MessageType_kMessageTypeReplace        MessageType = 33
	MessageType_kMessageTypeLogout         MessageType = 34
	MessageType_kMessageTypeAction         MessageType = 35
	MessageType_kMessageTypeRename         MessageType = 36
	MessageType_kMessageTypeUpdateMetadata MessageType = 128
)

var MessageType_name = map[int32]string{
	1:   "kMessageTypeHello",
	2:   "kMessageTypeGoodbye",
	3:   "kMessageTypeProbe",
	10:  "kMessageTypeNotify",
	20:  "kMessageTypeLoad",
	21:  "kMessageTypePlay",
	22:  "kMessageTypePause",
	23:  "kMessageTypePlayPause",
	24:  "kMessageTypeSeek",
	25:  "kMessageTypePrev",
	26:  "kMessageTypeNext",
	27:  "kMessageTypeVolume",
	28:  "kMessageTypeShuffle",
	29:  "kMessageTypeRepeat",
	31:  "kMessageTypeVolumeDown",
	32:  "kMessageTypeVolumeUp",
	33:  "kMessageTypeReplace",
	34:  "kMessageTypeLogout",
	35:  "kMessageTypeAction",
	36:  "kMessageTypeRename",
	128: "kMessageTypeUpdateMetadata",
}
var MessageType_value = map[string]int32{
	"kMessageTypeHello":          1,
	"kMessageTypeGoodbye":        2,
	"kMessageTypeProbe":          3,
	"kMessageTypeNotify":         10,
	"kMessageTypeLoad":           20,
	"kMessageTypePlay":           21,
	"kMessageTypePause":          22,
	"kMessageTypePlayPause":      23,
	"kMessageTypeSeek":           24,
	"kMessageTypePrev":           25,
	"kMessageTypeNext":           26,
	"kMessageTypeVolume":         27,
	"kMessageTypeShuffle":        28,
	"kMessageTypeRepeat":         29,
	"kMessageTypeVolumeDown":     31,
	"kMessageTypeVolumeUp":       32,
	"kMessageTypeReplace":        33,
	"kMessageTypeLogout":         34,
	"kMessageTypeAction":         35,
	"kMessageTypeRename":         36,
	"kMessageTypeUpdateMetadata": 128,
}

func (x MessageType) Enum() *MessageType {
	p := new(MessageType)
	*p = x
	return p
}
func (x MessageType) String() string {
	return proto.EnumName(MessageType_name, int32(x))
}
func (x *MessageType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(MessageType_value, data, "MessageType")
	if err != nil {
		return err
	}
	*x = MessageType(value)
	return nil
}
func (MessageType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type CapabilityType int32

const (
	CapabilityType_kSupportedContexts CapabilityType = 1
	CapabilityType_kCanBePlayer       CapabilityType = 2
	CapabilityType_kRestrictToLocal   CapabilityType = 3
	CapabilityType_kDeviceType        CapabilityType = 4
	CapabilityType_kGaiaEqConnectId   CapabilityType = 5
	CapabilityType_kSupportsLogout    CapabilityType = 6
	CapabilityType_kIsObservable      CapabilityType = 7
	CapabilityType_kVolumeSteps       CapabilityType = 8
	CapabilityType_kSupportedTypes    CapabilityType = 9
	CapabilityType_kCommandAcks       CapabilityType = 10
	CapabilityType_kSupportsRename    CapabilityType = 11
	CapabilityType_kHidden            CapabilityType = 12
)

var CapabilityType_name = map[int32]string{
	1:  "kSupportedContexts",
	2:  "kCanBePlayer",
	3:  "kRestrictToLocal",
	4:  "kDeviceType",
	5:  "kGaiaEqConnectId",
	6:  "kSupportsLogout",
	7:  "kIsObservable",
	8:  "kVolumeSteps",
	9:  "kSupportedTypes",
	10: "kCommandAcks",
	11: "kSupportsRename",
	12: "kHidden",
}
var CapabilityType_value = map[string]int32{
	"kSupportedContexts": 1,
	"kCanBePlayer":       2,
	"kRestrictToLocal":   3,
	"kDeviceType":        4,
	"kGaiaEqConnectId":   5,
	"kSupportsLogout":    6,
	"kIsObservable":      7,
	"kVolumeSteps":       8,
	"kSupportedTypes":    9,
	"kCommandAcks":       10,
	"kSupportsRename":    11,
	"kHidden":            12,
}

func (x CapabilityType) Enum() *CapabilityType {
	p := new(CapabilityType)
	*p = x
	return p
}
func (x CapabilityType) String() string {
	return proto.EnumName(CapabilityType_name, int32(x))
}
func (x *CapabilityType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CapabilityType_value, data, "CapabilityType")
	if err != nil {
		return err
	}
	*x = CapabilityType(value)
	return nil
}
func (CapabilityType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type PlayStatus int32

const (
	PlayStatus_kPlayStatusStop    PlayStatus = 0
	PlayStatus_kPlayStatusPlay    PlayStatus = 1
	PlayStatus_kPlayStatusPause   PlayStatus = 2
	PlayStatus_kPlayStatusLoading PlayStatus = 3
)

var PlayStatus_name = map[int32]string{
	0: "kPlayStatusStop",
	1: "kPlayStatusPlay",
	2: "kPlayStatusPause",
	3: "kPlayStatusLoading",
}
var PlayStatus_value = map[string]int32{
	"kPlayStatusStop":    0,
	"kPlayStatusPlay":    1,
	"kPlayStatusPause":   2,
	"kPlayStatusLoading": 3,
}

func (x PlayStatus) Enum() *PlayStatus {
	p := new(PlayStatus)
	*p = x
	return p
}
func (x PlayStatus) String() string {
	return proto.EnumName(PlayStatus_name, int32(x))
}
func (x *PlayStatus) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PlayStatus_value, data, "PlayStatus")
	if err != nil {
		return err
	}
	*x = PlayStatus(value)
	return nil
}
func (PlayStatus) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type Frame struct {
	Version            *uint32      `protobuf:"varint,1,opt,name=version" json:"version,omitempty"`
	Ident              *string      `protobuf:"bytes,2,opt,name=ident" json:"ident,omitempty"`
	ProtocolVersion    *string      `protobuf:"bytes,3,opt,name=protocol_version,json=protocolVersion" json:"protocol_version,omitempty"`
	SeqNr              *uint32      `protobuf:"varint,4,opt,name=seq_nr,json=seqNr" json:"seq_nr,omitempty"`
	Typ                *MessageType `protobuf:"varint,5,opt,name=typ,enum=MessageType" json:"typ,omitempty"`
	DeviceState        *DeviceState `protobuf:"bytes,7,opt,name=device_state,json=deviceState" json:"device_state,omitempty"`
	Goodbye            *Goodbye     `protobuf:"bytes,11,opt,name=goodbye" json:"goodbye,omitempty"`
	State              *State       `protobuf:"bytes,12,opt,name=state" json:"state,omitempty"`
	Position           *uint32      `protobuf:"varint,13,opt,name=position" json:"position,omitempty"`
	Volume             *uint32      `protobuf:"varint,14,opt,name=volume" json:"volume,omitempty"`
	StateUpdateId      *int64       `protobuf:"varint,17,opt,name=state_update_id,json=stateUpdateId" json:"state_update_id,omitempty"`
	Recipient          []string     `protobuf:"bytes,18,rep,name=recipient" json:"recipient,omitempty"`
	ContextPlayerState []byte       `protobuf:"bytes,19,opt,name=context_player_state,json=contextPlayerState" json:"context_player_state,omitempty"`
	NewName            *string      `protobuf:"bytes,20,opt,name=new_name,json=newName" json:"new_name,omitempty"`
	Metadata           *Metadata    `protobuf:"bytes,25,opt,name=metadata" json:"metadata,omitempty"`
	XXX_unrecognized   []byte       `json:"-"`
}

func (m *Frame) Reset()                    { *m = Frame{} }
func (m *Frame) String() string            { return proto.CompactTextString(m) }
func (*Frame) ProtoMessage()               {}
func (*Frame) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Frame) GetVersion() uint32 {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return 0
}

func (m *Frame) GetIdent() string {
	if m != nil && m.Ident != nil {
		return *m.Ident
	}
	return ""
}

func (m *Frame) GetProtocolVersion() string {
	if m != nil && m.ProtocolVersion != nil {
		return *m.ProtocolVersion
	}
	return ""
}

func (m *Frame) GetSeqNr() uint32 {
	if m != nil && m.SeqNr != nil {
		return *m.SeqNr
	}
	return 0
}

func (m *Frame) GetTyp() MessageType {
	if m != nil && m.Typ != nil {
		return *m.Typ
	}
	return MessageType_kMessageTypeHello
}

func (m *Frame) GetDeviceState() *DeviceState {
	if m != nil {
		return m.DeviceState
	}
	return nil
}

func (m *Frame) GetGoodbye() *Goodbye {
	if m != nil {
		return m.Goodbye
	}
	return nil
}

func (m *Frame) GetState() *State {
	if m != nil {
		return m.State
	}
	return nil
}

func (m *Frame) GetPosition() uint32 {
	if m != nil && m.Position != nil {
		return *m.Position
	}
	return 0
}

func (m *Frame) GetVolume() uint32 {
	if m != nil && m.Volume != nil {
		return *m.Volume
	}
	return 0
}

func (m *Frame) GetStateUpdateId() int64 {
	if m != nil && m.StateUpdateId != nil {
		return *m.StateUpdateId
	}
	return 0
}

func (m *Frame) GetRecipient() []string {
	if m != nil {
		return m.Recipient
	}
	return nil
}

func (m *Frame) GetContextPlayerState() []byte {
	if m != nil {
		return m.ContextPlayerState
	}
	return nil
}

func (m *Frame) GetNewName() string {
	if m != nil && m.NewName != nil {
		return *m.NewName
	}
	return ""
}

func (m *Frame) GetMetadata() *Metadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

type DeviceState struct {
	SwVersion          *string       `protobuf:"bytes,1,opt,name=sw_version,json=swVersion" json:"sw_version,omitempty"`
	IsActive           *bool         `protobuf:"varint,10,opt,name=is_active,json=isActive" json:"is_active,omitempty"`
	CanPlay            *bool         `protobuf:"varint,11,opt,name=can_play,json=canPlay" json:"can_play,omitempty"`
	Volume             *uint32       `protobuf:"varint,12,opt,name=volume" json:"volume,omitempty"`
	Name               *string       `protobuf:"bytes,13,opt,name=name" json:"name,omitempty"`
	ErrorCode          *uint32       `protobuf:"varint,14,opt,name=error_code,json=errorCode" json:"error_code,omitempty"`
	BecameActiveAt     *int64        `protobuf:"varint,15,opt,name=became_active_at,json=becameActiveAt" json:"became_active_at,omitempty"`
	ErrorMessage       *string       `protobuf:"bytes,16,opt,name=error_message,json=errorMessage" json:"error_message,omitempty"`
	Capabilities       []*Capability `protobuf:"bytes,17,rep,name=capabilities" json:"capabilities,omitempty"`
	ContextPlayerError *string       `protobuf:"bytes,20,opt,name=context_player_error,json=contextPlayerError" json:"context_player_error,omitempty"`
	Metadata           []*Metadata   `protobuf:"bytes,25,rep,name=metadata" json:"metadata,omitempty"`
	XXX_unrecognized   []byte        `json:"-"`
}

func (m *DeviceState) Reset()                    { *m = DeviceState{} }
func (m *DeviceState) String() string            { return proto.CompactTextString(m) }
func (*DeviceState) ProtoMessage()               {}
func (*DeviceState) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *DeviceState) GetSwVersion() string {
	if m != nil && m.SwVersion != nil {
		return *m.SwVersion
	}
	return ""
}

func (m *DeviceState) GetIsActive() bool {
	if m != nil && m.IsActive != nil {
		return *m.IsActive
	}
	return false
}

func (m *DeviceState) GetCanPlay() bool {
	if m != nil && m.CanPlay != nil {
		return *m.CanPlay
	}
	return false
}

func (m *DeviceState) GetVolume() uint32 {
	if m != nil && m.Volume != nil {
		return *m.Volume
	}
	return 0
}

func (m *DeviceState) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *DeviceState) GetErrorCode() uint32 {
	if m != nil && m.ErrorCode != nil {
		return *m.ErrorCode
	}
	return 0
}

func (m *DeviceState) GetBecameActiveAt() int64 {
	if m != nil && m.BecameActiveAt != nil {
		return *m.BecameActiveAt
	}
	return 0
}

func (m *DeviceState) GetErrorMessage() string {
	if m != nil && m.ErrorMessage != nil {
		return *m.ErrorMessage
	}
	return ""
}

func (m *DeviceState) GetCapabilities() []*Capability {
	if m != nil {
		return m.Capabilities
	}
	return nil
}

func (m *DeviceState) GetContextPlayerError() string {
	if m != nil && m.ContextPlayerError != nil {
		return *m.ContextPlayerError
	}
	return ""
}

func (m *DeviceState) GetMetadata() []*Metadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

type Capability struct {
	Typ              *CapabilityType `protobuf:"varint,1,opt,name=typ,enum=CapabilityType" json:"typ,omitempty"`
	IntValue         []int64         `protobuf:"varint,2,rep,name=intValue" json:"intValue,omitempty"`
	StringValue      []string        `protobuf:"bytes,3,rep,name=stringValue" json:"stringValue,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *Capability) Reset()                    { *m = Capability{} }
func (m *Capability) String() string            { return proto.CompactTextString(m) }
func (*Capability) ProtoMessage()               {}
func (*Capability) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Capability) GetTyp() CapabilityType {
	if m != nil && m.Typ != nil {
		return *m.Typ
	}
	return CapabilityType_kSupportedContexts
}

func (m *Capability) GetIntValue() []int64 {
	if m != nil {
		return m.IntValue
	}
	return nil
}

func (m *Capability) GetStringValue() []string {
	if m != nil {
		return m.StringValue
	}
	return nil
}

type Goodbye struct {
	Reason           *string `protobuf:"bytes,1,opt,name=reason" json:"reason,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Goodbye) Reset()                    { *m = Goodbye{} }
func (m *Goodbye) String() string            { return proto.CompactTextString(m) }
func (*Goodbye) ProtoMessage()               {}
func (*Goodbye) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Goodbye) GetReason() string {
	if m != nil && m.Reason != nil {
		return *m.Reason
	}
	return ""
}

type State struct {
	ContextUri          *string     `protobuf:"bytes,2,opt,name=context_uri,json=contextUri" json:"context_uri,omitempty"`
	Index               *uint32     `protobuf:"varint,3,opt,name=index" json:"index,omitempty"`
	PositionMs          *uint32     `protobuf:"varint,4,opt,name=position_ms,json=positionMs" json:"position_ms,omitempty"`
	Status              *PlayStatus `protobuf:"varint,5,opt,name=status,enum=PlayStatus" json:"status,omitempty"`
	PositionMeasuredAt  *uint64     `protobuf:"varint,7,opt,name=position_measured_at,json=positionMeasuredAt" json:"position_measured_at,omitempty"`
	ContextDescription  *string     `protobuf:"bytes,8,opt,name=context_description,json=contextDescription" json:"context_description,omitempty"`
	Shuffle             *bool       `protobuf:"varint,13,opt,name=shuffle" json:"shuffle,omitempty"`
	Repeat              *bool       `protobuf:"varint,14,opt,name=repeat" json:"repeat,omitempty"`
	LastCommandIdent    *string     `protobuf:"bytes,20,opt,name=last_command_ident,json=lastCommandIdent" json:"last_command_ident,omitempty"`
	LastCommandMsgid    *uint32     `protobuf:"varint,21,opt,name=last_command_msgid,json=lastCommandMsgid" json:"last_command_msgid,omitempty"`
	PlayingFromFallback *bool       `protobuf:"varint,24,opt,name=playing_from_fallback,json=playingFromFallback" json:"playing_from_fallback,omitempty"`
	Row                 *uint32     `protobuf:"varint,25,opt,name=row" json:"row,omitempty"`
	PlayingTrackIndex   *uint32     `protobuf:"varint,26,opt,name=playing_track_index,json=playingTrackIndex" json:"playing_track_index,omitempty"`
	Track               []*TrackRef `protobuf:"bytes,27,rep,name=track" json:"track,omitempty"`
	Ad                  *Ad         `protobuf:"bytes,28,opt,name=ad" json:"ad,omitempty"`
	XXX_unrecognized    []byte      `json:"-"`
}

func (m *State) Reset()                    { *m = State{} }
func (m *State) String() string            { return proto.CompactTextString(m) }
func (*State) ProtoMessage()               {}
func (*State) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *State) GetContextUri() string {
	if m != nil && m.ContextUri != nil {
		return *m.ContextUri
	}
	return ""
}

func (m *State) GetIndex() uint32 {
	if m != nil && m.Index != nil {
		return *m.Index
	}
	return 0
}

func (m *State) GetPositionMs() uint32 {
	if m != nil && m.PositionMs != nil {
		return *m.PositionMs
	}
	return 0
}

func (m *State) GetStatus() PlayStatus {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return PlayStatus_kPlayStatusStop
}

func (m *State) GetPositionMeasuredAt() uint64 {
	if m != nil && m.PositionMeasuredAt != nil {
		return *m.PositionMeasuredAt
	}
	return 0
}

func (m *State) GetContextDescription() string {
	if m != nil && m.ContextDescription != nil {
		return *m.ContextDescription
	}
	return ""
}

func (m *State) GetShuffle() bool {
	if m != nil && m.Shuffle != nil {
		return *m.Shuffle
	}
	return false
}

func (m *State) GetRepeat() bool {
	if m != nil && m.Repeat != nil {
		return *m.Repeat
	}
	return false
}

func (m *State) GetLastCommandIdent() string {
	if m != nil && m.LastCommandIdent != nil {
		return *m.LastCommandIdent
	}
	return ""
}

func (m *State) GetLastCommandMsgid() uint32 {
	if m != nil && m.LastCommandMsgid != nil {
		return *m.LastCommandMsgid
	}
	return 0
}

func (m *State) GetPlayingFromFallback() bool {
	if m != nil && m.PlayingFromFallback != nil {
		return *m.PlayingFromFallback
	}
	return false
}

func (m *State) GetRow() uint32 {
	if m != nil && m.Row != nil {
		return *m.Row
	}
	return 0
}

func (m *State) GetPlayingTrackIndex() uint32 {
	if m != nil && m.PlayingTrackIndex != nil {
		return *m.PlayingTrackIndex
	}
	return 0
}

func (m *State) GetTrack() []*TrackRef {
	if m != nil {
		return m.Track
	}
	return nil
}

func (m *State) GetAd() *Ad {
	if m != nil {
		return m.Ad
	}
	return nil
}

type TrackRef struct {
	Gid              []byte  `protobuf:"bytes,1,opt,name=gid" json:"gid,omitempty"`
	Uri              *string `protobuf:"bytes,2,opt,name=uri" json:"uri,omitempty"`
	Queued           *bool   `protobuf:"varint,3,opt,name=queued" json:"queued,omitempty"`
	Context          *string `protobuf:"bytes,4,opt,name=context" json:"context,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *TrackRef) Reset()                    { *m = TrackRef{} }
func (m *TrackRef) String() string            { return proto.CompactTextString(m) }
func (*TrackRef) ProtoMessage()               {}
func (*TrackRef) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *TrackRef) GetGid() []byte {
	if m != nil {
		return m.Gid
	}
	return nil
}

func (m *TrackRef) GetUri() string {
	if m != nil && m.Uri != nil {
		return *m.Uri
	}
	return ""
}

func (m *TrackRef) GetQueued() bool {
	if m != nil && m.Queued != nil {
		return *m.Queued
	}
	return false
}

func (m *TrackRef) GetContext() string {
	if m != nil && m.Context != nil {
		return *m.Context
	}
	return ""
}

type Ad struct {
	Next             *int32  `protobuf:"varint,1,opt,name=next" json:"next,omitempty"`
	OggFid           []byte  `protobuf:"bytes,2,opt,name=ogg_fid,json=oggFid" json:"ogg_fid,omitempty"`
	ImageFid         []byte  `protobuf:"bytes,3,opt,name=image_fid,json=imageFid" json:"image_fid,omitempty"`
	Duration         *int32  `protobuf:"varint,4,opt,name=duration" json:"duration,omitempty"`
	ClickUrl         *string `protobuf:"bytes,5,opt,name=click_url,json=clickUrl" json:"click_url,omitempty"`
	ImpressionUrl    *string `protobuf:"bytes,6,opt,name=impression_url,json=impressionUrl" json:"impression_url,omitempty"`
	Product          *string `protobuf:"bytes,7,opt,name=product" json:"product,omitempty"`
	Advertiser       *string `protobuf:"bytes,8,opt,name=advertiser" json:"advertiser,omitempty"`
	Gid              []byte  `protobuf:"bytes,9,opt,name=gid" json:"gid,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Ad) Reset()                    { *m = Ad{} }
func (m *Ad) String() string            { return proto.CompactTextString(m) }
func (*Ad) ProtoMessage()               {}
func (*Ad) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *Ad) GetNext() int32 {
	if m != nil && m.Next != nil {
		return *m.Next
	}
	return 0
}

func (m *Ad) GetOggFid() []byte {
	if m != nil {
		return m.OggFid
	}
	return nil
}

func (m *Ad) GetImageFid() []byte {
	if m != nil {
		return m.ImageFid
	}
	return nil
}

func (m *Ad) GetDuration() int32 {
	if m != nil && m.Duration != nil {
		return *m.Duration
	}
	return 0
}

func (m *Ad) GetClickUrl() string {
	if m != nil && m.ClickUrl != nil {
		return *m.ClickUrl
	}
	return ""
}

func (m *Ad) GetImpressionUrl() string {
	if m != nil && m.ImpressionUrl != nil {
		return *m.ImpressionUrl
	}
	return ""
}

func (m *Ad) GetProduct() string {
	if m != nil && m.Product != nil {
		return *m.Product
	}
	return ""
}

func (m *Ad) GetAdvertiser() string {
	if m != nil && m.Advertiser != nil {
		return *m.Advertiser
	}
	return ""
}

func (m *Ad) GetGid() []byte {
	if m != nil {
		return m.Gid
	}
	return nil
}

type Metadata struct {
	Type             *string `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
	Metadata         *string `protobuf:"bytes,2,opt,name=metadata" json:"metadata,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Metadata) Reset()                    { *m = Metadata{} }
func (m *Metadata) String() string            { return proto.CompactTextString(m) }
func (*Metadata) ProtoMessage()               {}
func (*Metadata) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *Metadata) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *Metadata) GetMetadata() string {
	if m != nil && m.Metadata != nil {
		return *m.Metadata
	}
	return ""
}

func init() {
	proto.RegisterType((*Frame)(nil), "Frame")
	proto.RegisterType((*DeviceState)(nil), "DeviceState")
	proto.RegisterType((*Capability)(nil), "Capability")
	proto.RegisterType((*Goodbye)(nil), "Goodbye")
	proto.RegisterType((*State)(nil), "State")
	proto.RegisterType((*TrackRef)(nil), "TrackRef")
	proto.RegisterType((*Ad)(nil), "Ad")
	proto.RegisterType((*Metadata)(nil), "Metadata")
	proto.RegisterEnum("MessageType", MessageType_name, MessageType_value)
	proto.RegisterEnum("CapabilityType", CapabilityType_name, CapabilityType_value)
	proto.RegisterEnum("PlayStatus", PlayStatus_name, PlayStatus_value)
}

func init() { proto.RegisterFile("spirc.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 1355 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x74, 0x56, 0x4d, 0x73, 0xdb, 0x36,
	0x10, 0xad, 0x4c, 0x7d, 0x42, 0x92, 0x0d, 0xc3, 0x76, 0xc2, 0x38, 0x49, 0xe3, 0x28, 0x6d, 0x27,
	0xcd, 0x74, 0x94, 0x4e, 0x8e, 0xbd, 0xb9, 0x4e, 0x9c, 0x78, 0x26, 0x71, 0x33, 0x54, 0x9c, 0x2b,
	0x0b, 0x91, 0xb0, 0xcb, 0x11, 0x45, 0xd0, 0x00, 0x69, 0xc7, 0xb7, 0x1e, 0x7b, 0xe9, 0x8f, 0xe8,
	0xdf, 0xcc, 0xa9, 0x8b, 0x05, 0x28, 0xd1, 0x74, 0x7b, 0xb2, 0xf6, 0xed, 0x72, 0xb1, 0x78, 0xfb,
	0x76, 0x61, 0x32, 0xd4, 0x79, 0xa2, 0xa2, 0x69, 0xae, 0x64, 0x21, 0x27, 0x5f, 0x3d, 0xd2, 0x39,
	0x56, 0x7c, 0x29, 0x98, 0x4f, 0x7a, 0x57, 0x42, 0xe9, 0x44, 0x66, 0x7e, 0xeb, 0xa0, 0xf5, 0x7c,
	0x1c, 0x54, 0x26, 0xdb, 0x25, 0x9d, 0x24, 0x16, 0x59, 0xe1, 0x6f, 0x00, 0x3e, 0x08, 0xac, 0xc1,
	0x7e, 0x24, 0x14, 0x53, 0x44, 0x32, 0x0d, 0xab, 0x0f, 0x3d, 0x0c, 0xd8, 0xaa, 0xf0, 0xcf, 0x2e,
	0xc1, 0x1e, 0xe9, 0x6a, 0x71, 0x19, 0x66, 0xca, 0x6f, 0x63, 0xe6, 0x0e, 0x58, 0xa7, 0x8a, 0x7d,
	0x4b, 0xbc, 0xe2, 0x26, 0xf7, 0x3b, 0x80, 0x6d, 0xbe, 0x1a, 0x4d, 0x3f, 0x08, 0xad, 0xf9, 0x85,
	0xf8, 0x74, 0x93, 0x8b, 0xc0, 0x38, 0xd8, 0x4b, 0x32, 0x8a, 0xc5, 0x55, 0x12, 0x89, 0x50, 0x17,
	0xbc, 0x10, 0x7e, 0x0f, 0x02, 0x87, 0x10, 0xf8, 0x1a, 0xc1, 0x99, 0xc1, 0x82, 0x61, 0xbc, 0x36,
	0xd8, 0x84, 0xf4, 0x2e, 0xa4, 0x8c, 0xe7, 0x37, 0xc2, 0x1f, 0x62, 0x6c, 0x7f, 0xfa, 0xd6, 0xda,
	0x41, 0xe5, 0x60, 0x8f, 0x48, 0xc7, 0x66, 0x1b, 0x61, 0x44, 0x77, 0x6a, 0xf3, 0x58, 0x90, 0xed,
	0x93, 0x7e, 0x2e, 0x75, 0x52, 0x98, 0xcb, 0x8c, 0xb1, 0xd6, 0x95, 0xcd, 0xee, 0x91, 0xee, 0x95,
	0x4c, 0xcb, 0xa5, 0xf0, 0x37, 0xd1, 0xe3, 0x2c, 0xf6, 0x03, 0xd9, 0xc2, 0x8f, 0xc3, 0x32, 0x8f,
	0xcd, 0x9f, 0x24, 0xf6, 0xb7, 0x21, 0xc0, 0x0b, 0xc6, 0x08, 0x9f, 0x21, 0x7a, 0x12, 0xc3, 0xc9,
	0x03, 0x25, 0xa2, 0x24, 0x4f, 0x0c, 0x95, 0xec, 0xc0, 0x03, 0xa6, 0xd6, 0x00, 0xfb, 0x99, 0xec,
	0x46, 0x32, 0x2b, 0xc4, 0x97, 0x22, 0xcc, 0x53, 0x7e, 0x23, 0x94, 0xbb, 0xf4, 0x0e, 0xa4, 0x1a,
	0x05, 0xcc, 0xf9, 0x3e, 0xa2, 0xcb, 0xde, 0xf6, 0x01, 0xe9, 0x67, 0xe2, 0x3a, 0xcc, 0xa0, 0x79,
	0xfe, 0x2e, 0x12, 0xdf, 0x03, 0xfb, 0xd4, 0xf4, 0xf2, 0x7b, 0xd2, 0x5f, 0x8a, 0x82, 0xc3, 0xc1,
	0xdc, 0x7f, 0x80, 0xf7, 0x1c, 0x00, 0xbd, 0x16, 0x08, 0x56, 0xae, 0xc9, 0x5f, 0x1e, 0x19, 0xd6,
	0xc8, 0x64, 0x8f, 0x09, 0xd1, 0xd7, 0x61, 0x5d, 0x05, 0x50, 0xa2, 0xbe, 0xae, 0xda, 0xf8, 0x90,
	0x0c, 0x12, 0x1d, 0xf2, 0xa8, 0x48, 0xae, 0x84, 0x4f, 0xc0, 0xdb, 0x0f, 0xfa, 0x89, 0x3e, 0x44,
	0xdb, 0x54, 0x13, 0xf1, 0x0c, 0x6b, 0x47, 0xf2, 0xfb, 0x41, 0x0f, 0x6c, 0x53, 0x6f, 0x8d, 0xb8,
	0xd1, 0x2d, 0xe2, 0x18, 0x69, 0x63, 0xf1, 0x63, 0x3c, 0x08, 0x7f, 0x9b, 0x12, 0x84, 0x52, 0x52,
	0x85, 0x91, 0x8c, 0x2b, 0xa2, 0x07, 0x88, 0x1c, 0x01, 0xc0, 0x9e, 0x13, 0x3a, 0x17, 0x11, 0x04,
	0xba, 0x32, 0x42, 0x5e, 0xf8, 0x5b, 0x48, 0xf6, 0xa6, 0xc5, 0x6d, 0x35, 0x87, 0x05, 0x7b, 0x46,
	0xc6, 0x36, 0xd1, 0xd2, 0xca, 0xca, 0xa7, 0x78, 0xca, 0x08, 0x41, 0x27, 0x35, 0xa3, 0xb0, 0x88,
	0xe7, 0x7c, 0x9e, 0xa4, 0xd0, 0x62, 0xa1, 0xa1, 0x6f, 0x1e, 0x70, 0x35, 0x9c, 0x1e, 0x55, 0xe0,
	0x4d, 0x70, 0x2b, 0xe0, 0x3f, 0xba, 0x84, 0xf9, 0x1c, 0xff, 0xb7, 0xbb, 0xf4, 0xc6, 0x78, 0x1a,
	0xad, 0xf0, 0xfe, 0xaf, 0x15, 0x4b, 0x42, 0xd6, 0x87, 0xb2, 0xa7, 0x76, 0x32, 0x5a, 0x38, 0x19,
	0x5b, 0xb5, 0x72, 0xd6, 0xc3, 0x01, 0x4a, 0x4d, 0xb2, 0xe2, 0x33, 0x4f, 0x4b, 0x01, 0x73, 0xe9,
	0x01, 0x03, 0x2b, 0x9b, 0x1d, 0xc0, 0x8c, 0x17, 0x2a, 0xc9, 0x2e, 0xac, 0xdb, 0x43, 0xad, 0xd5,
	0xa1, 0xc9, 0x53, 0xd2, 0x73, 0x93, 0x61, 0xba, 0xa3, 0x04, 0xd7, 0xab, 0x86, 0x3b, 0x6b, 0xf2,
	0x4f, 0x9b, 0x74, 0xac, 0x2c, 0x9e, 0x90, 0x61, 0x75, 0xe9, 0x52, 0x25, 0x6e, 0x0b, 0x10, 0x07,
	0x9d, 0xa9, 0x04, 0x17, 0x44, 0x16, 0x8b, 0x2f, 0x38, 0xff, 0x30, 0xde, 0x68, 0x98, 0xcf, 0xaa,
	0xd9, 0x09, 0x97, 0xda, 0x8d, 0x3e, 0xa9, 0xa0, 0x0f, 0x1a, 0x5a, 0xd4, 0x35, 0x1a, 0x2f, 0xb5,
	0x5b, 0x01, 0xc3, 0xa9, 0x21, 0x6e, 0x86, 0x50, 0xe0, 0x5c, 0x86, 0xf1, 0x75, 0x16, 0xa8, 0xac,
	0x54, 0x22, 0x36, 0x5d, 0x37, 0xcb, 0xa0, 0x1d, 0xb0, 0x55, 0x3a, 0xe7, 0x82, 0xce, 0xbf, 0x24,
	0x3b, 0x55, 0xb9, 0xb1, 0xd0, 0x91, 0x4a, 0x72, 0x1c, 0xe7, 0xfe, 0xad, 0x16, 0xbd, 0x5e, 0x7b,
	0xcc, 0xe6, 0xd3, 0x7f, 0x94, 0xe7, 0xe7, 0xa9, 0x95, 0x22, 0x28, 0xd7, 0x99, 0x96, 0x9b, 0x5c,
	0xc0, 0x71, 0x9b, 0xe8, 0x70, 0x16, 0xfb, 0x89, 0xb0, 0x94, 0xeb, 0x02, 0x44, 0xba, 0x5c, 0xf2,
	0x2c, 0x0e, 0xed, 0x7a, 0xb4, 0x22, 0xa0, 0xc6, 0x73, 0x64, 0x1d, 0x27, 0xb8, 0x29, 0x9b, 0xd1,
	0x4b, 0x7d, 0x01, 0x3b, 0x62, 0x0f, 0xf9, 0xa8, 0x47, 0x7f, 0x30, 0x38, 0x7b, 0x45, 0xf6, 0x8c,
	0xb4, 0xa0, 0x55, 0xe1, 0xb9, 0x92, 0xcb, 0xf0, 0x9c, 0xa7, 0xe9, 0x9c, 0x47, 0x0b, 0xdf, 0xc7,
	0x12, 0x76, 0x9c, 0xf3, 0x18, 0x7c, 0xc7, 0xce, 0xc5, 0x28, 0xf1, 0x94, 0xbc, 0xc6, 0x51, 0x1f,
	0x07, 0xe6, 0x27, 0x9b, 0x92, 0x2a, 0x30, 0x2c, 0x14, 0x84, 0x84, 0xb6, 0x41, 0xfb, 0x18, 0xb1,
	0xed, 0x5c, 0x9f, 0x8c, 0xe7, 0xc4, 0x35, 0xab, 0x83, 0x71, 0xfe, 0x43, 0xa7, 0x51, 0xf4, 0x05,
	0xe2, 0x3c, 0xb0, 0x38, 0xdb, 0x21, 0x1b, 0x3c, 0xf6, 0x1f, 0xe1, 0x32, 0xf1, 0xa6, 0x87, 0x71,
	0x00, 0xe6, 0xe4, 0x77, 0xd2, 0xaf, 0xe2, 0x4c, 0x0d, 0xe6, 0x5a, 0x2d, 0xdc, 0x57, 0xe6, 0xa7,
	0x41, 0xd6, 0x7a, 0x31, 0x3f, 0x0d, 0x9f, 0x97, 0xa5, 0x28, 0x45, 0x8c, 0x4a, 0x01, 0x3e, 0xad,
	0x65, 0x3a, 0xe0, 0xfa, 0x82, 0x32, 0x81, 0x4d, 0xe6, 0xcc, 0xc9, 0xd7, 0x16, 0xd9, 0x38, 0x8c,
	0x71, 0x55, 0x18, 0xaf, 0xc9, 0xde, 0x09, 0xf0, 0x37, 0xbb, 0x4f, 0x7a, 0xf2, 0x02, 0x48, 0x82,
	0x43, 0x37, 0xf0, 0xd0, 0x2e, 0x98, 0xc7, 0x70, 0xae, 0xd9, 0x53, 0x4b, 0x18, 0x6f, 0x74, 0x79,
	0xe8, 0xea, 0x23, 0x60, 0x9c, 0x30, 0x37, 0x71, 0xa9, 0x38, 0x4a, 0xa2, 0x8d, 0xd9, 0x56, 0xb6,
	0xf9, 0x30, 0x4a, 0x13, 0x20, 0xab, 0x54, 0x29, 0x6a, 0x72, 0x10, 0xf4, 0x11, 0x38, 0x53, 0x29,
	0x0c, 0xf2, 0x66, 0xb2, 0xcc, 0x15, 0x6c, 0x0e, 0x23, 0x45, 0x13, 0xd1, 0xc5, 0x88, 0xf1, 0x1a,
	0x35, 0x61, 0x70, 0x15, 0x78, 0xfe, 0xe2, 0x32, 0xb2, 0x12, 0x85, 0xab, 0x38, 0x13, 0x9e, 0x3b,
	0xc2, 0x63, 0x58, 0xae, 0x45, 0xa2, 0x85, 0x72, 0x72, 0xac, 0x21, 0x15, 0x81, 0x83, 0x15, 0x81,
	0x93, 0x5f, 0x48, 0xbf, 0x5a, 0x15, 0x86, 0x01, 0x18, 0x7b, 0xe1, 0x86, 0x14, 0x7f, 0x9b, 0xbb,
	0xac, 0x76, 0x8b, 0x65, 0x79, 0x65, 0xbf, 0xf8, 0xbb, 0x4d, 0x86, 0xb5, 0x17, 0x15, 0xde, 0xe0,
	0xed, 0x45, 0xcd, 0x7e, 0x27, 0xd2, 0x54, 0xd2, 0x16, 0x90, 0xb8, 0x53, 0x87, 0xdd, 0x52, 0xa0,
	0x1b, 0xcd, 0xf8, 0x8f, 0x4a, 0xce, 0x05, 0xf5, 0xa0, 0x83, 0xac, 0x0e, 0x9f, 0xca, 0x22, 0x39,
	0xbf, 0xa1, 0x04, 0x56, 0x00, 0xad, 0xe3, 0xef, 0x25, 0x8f, 0xe9, 0x6e, 0x13, 0x35, 0xe3, 0x4d,
	0xf7, 0xee, 0xa4, 0xe6, 0xa5, 0x16, 0xf4, 0x1e, 0xbc, 0x20, 0x7b, 0xcd, 0x60, 0xeb, 0xba, 0xdf,
	0xcc, 0x33, 0x13, 0x62, 0x41, 0xfd, 0x3b, 0xd9, 0x95, 0xb8, 0xa2, 0x0f, 0x9a, 0xe8, 0x29, 0x48,
	0x85, 0xee, 0x37, 0xeb, 0xfe, 0x8c, 0x2f, 0x10, 0x7d, 0xd8, 0xbc, 0xff, 0xcc, 0x0e, 0x3e, 0x7d,
	0xd4, 0xfc, 0x20, 0xc0, 0xc1, 0xa7, 0x8f, 0x81, 0xf3, 0x7b, 0x77, 0x13, 0xbd, 0x96, 0xd7, 0x19,
	0x7d, 0x02, 0xbd, 0xdf, 0xbd, 0xeb, 0x3b, 0xcb, 0xe9, 0x41, 0xf3, 0x18, 0xc8, 0x96, 0xf2, 0x48,
	0xd0, 0xa7, 0xcd, 0x63, 0xde, 0xcb, 0x0b, 0x59, 0x16, 0x74, 0xd2, 0xc4, 0xcd, 0xb3, 0x26, 0x33,
	0xfa, 0xec, 0x6e, 0x59, 0xe6, 0xd5, 0xa4, 0xdf, 0xc1, 0xfc, 0xee, 0xd7, 0x71, 0xfb, 0x4f, 0x47,
	0x25, 0x1e, 0xfa, 0x67, 0xeb, 0x05, 0x0c, 0xd2, 0xe6, 0xed, 0x77, 0x04, 0x73, 0xcd, 0xca, 0x3c,
	0x97, 0xaa, 0x10, 0xf1, 0x91, 0x1d, 0x38, 0x0d, 0x9a, 0xa0, 0x64, 0xb4, 0x38, 0xe2, 0xd9, 0xaf,
	0xc2, 0xbe, 0x63, 0x20, 0x06, 0xc3, 0x69, 0x20, 0xcc, 0x03, 0x12, 0x15, 0x9f, 0xe4, 0x7b, 0x19,
	0xf1, 0x14, 0xb4, 0xb0, 0x45, 0x86, 0x0b, 0xfb, 0xef, 0x83, 0x49, 0x47, 0xdb, 0x18, 0xf6, 0x96,
	0x27, 0xfc, 0xcd, 0x25, 0x64, 0xcb, 0x44, 0x54, 0x9c, 0xc4, 0xb4, 0x03, 0x9b, 0x63, 0xab, 0x3a,
	0x46, 0xbb, 0xfb, 0x75, 0xd9, 0x36, 0x19, 0x2f, 0x4e, 0xf4, 0x6f, 0x73, 0x10, 0xfe, 0x15, 0x9f,
	0x03, 0xe3, 0x3d, 0x3c, 0xd6, 0x52, 0x36, 0x2b, 0x44, 0xae, 0x69, 0xbf, 0xfe, 0xa5, 0x88, 0xcd,
	0x19, 0x9a, 0x0e, 0x6c, 0x75, 0x76, 0x61, 0x1e, 0x46, 0x0b, 0x0d, 0xda, 0xab, 0x1f, 0xe0, 0x08,
	0x19, 0xb2, 0x21, 0xe9, 0x2d, 0xde, 0x25, 0x31, 0x2c, 0x60, 0x3a, 0x7a, 0x11, 0x13, 0xb2, 0x7e,
	0x5a, 0x30, 0x7e, 0x6d, 0xce, 0x0a, 0x99, 0xd3, 0x6f, 0x1a, 0x20, 0x2a, 0xb5, 0x85, 0x17, 0xaa,
	0x81, 0xa8, 0xc6, 0x0d, 0xe4, 0x6d, 0x8d, 0x1a, 0xa9, 0xc3, 0x2e, 0xa5, 0xde, 0xbf, 0x01, 0x00,
	0x00, 0xff, 0xff, 0x4f, 0x16, 0xbc, 0x4f, 0x59, 0x0b, 0x00, 0x00,
}
